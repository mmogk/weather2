import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect, useRef } from 'react';
import axios from 'axios';


export default function Home() {
  //HAVE API KEYY IN .ENVVV 
  const apiKey = process.env.NEXT_PUBLIC_KEY;
  const location = "vancouver"
  const units = "metric"
  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&appid=${apiKey}&units=${units}}`
  
  const [data, setData] = useState();
  const grabWeather = useRef(false);

  const fetchWeather = async () => {
    const response = await axios.get(url);
    console.log(response);

    console.log(response.data.list);
    const arrayOfDays = [];

    let weatherData = response.data.list.map((weather, index) =>{
      console.log(parseInt(weather.dt_txt.substr(8,2), 10));
      let num = parseInt(weather.dt_txt.substr(8,2), 10); 

      if(num !== arrayOfDays.find(element => element === num)){
        arrayOfDays.push(num);
        console.log("Here");
        console.log(response.data.list[index]);
        var month = "";
        var icon = '';

        if (weather.dt_txt.substr(5,2) == 1) {
          month ="January";
        } else if (weather.dt_txt.substr(5,2) == 2) {
          month = "February";
        } else if (weather.dt_txt.substr(5,2) == 3) {
          month = "March";
        } else if (weather.dt_txt.substr(5,2) == 4) {
          month = "April";
        } else if (weather.dt_txt.substr(5,2) == 5) {
          month ="May";
        } else if (weather.dt_txt.substr(5,2) == 6) {
          month = "June";
        } else if (weather.dt_txt.substr(5,2) == 7) {
          month = "July";
        } else if (weather.dt_txt.substr(5,2) == 8) {
          month = "August";
        } else if (weather.dt_txt.substr(5,2) == 9) {
          month = "September";
        } else if (weather.dt_txt.substr(5,2) == 10) {
          month = "October";
        } else if (weather.dt_txt.substr(5,2) == 11) {  
          month = "November";
        } else if (weather.dt_txt.substr(5,2) == 12) {
          month = "December";
        }
        if(weather.weather[0].main == 'Clouds') {
          icon = '/icons/broken-clouds.png'
        } else if (weather.weather[0].main == 'Clear') {
          icon = '/icons/clear-sky.png'
        } else if (weather.weather[0].main == 'Rain') { 
          icon = '/icons/rain.png'
        } else if (weather.weather[0].main == 'Snow') {
          icon = '/icons/snow.png'
        } else if (weather.weather[0].main == 'Thunderstorm') {
          icon = '/icons/thunderstorm.png'
        } else if (weather.weather[0].main == 'Mist') {
          icon = '/icons/mist.png'
        }

        var now = new Date(weather.dt_txt);
        var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
        var day = days[now.getDate()];

        return (
          <div key={index}>
            <Image 
            src={icon}
            alt={icon}
            width={180}
            height={180}
            priority
            />
            <p>
              {day} <br /> {month} {weather.dt_txt.substr(8,2)} <br /> {weather.main.temp}°C <br /> {weather.weather[0].main}
            </p>
            <div>{weather.main.temp.toFixed(1)} °C</div>
            <div>{weather.weather[0].main}</div>
          </div>
        )
      }
    })
    console.log(arrayOfDays);
    setData(weatherData);
  }

  useEffect(() => {
    if(grabWeather.current === true){
      fetchWeather();
    }
    return () => {
      grabWeather.current = true;
    }
  },[]);

  const current = new Date();
  const date = `${current.getDate()}. ${current.getMonth() + 1}. ${current.getFullYear()}`;
  
  
  return (
    <div className={styles.container}>
      <Head>
        <title>7 day weather</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
        <link href="https://fonts.googleapis.com/css2?family=Yomogi&display=swap" rel="stylesheet"></link>
      </Head>

      <main className={styles.main}>
        <div className={styles.header}>
        <p className={styles.card}>
          Vancouver, BC Weather <br />
          Last Updates: {date}
        </p>
        <Image 
        src = "/icons/weather-forecast-logo.png"
        alt = "Weather Logo"
        width = {300}
        height = {100}
        priority
        />
        <a>
          by {''}
          Seth
        </a>
        </div>
        <div className={styles.grid}>
          {data}
        </div>
      </main>

    </div>
  )
}
